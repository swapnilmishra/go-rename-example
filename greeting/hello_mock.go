// Code generated by MockGen. DO NOT EDIT.
// Source: hellointerface.go

// Package main is a generated GoMock package.
package greeting

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockHello is a mock of Hello interface
type MockHello struct {
	ctrl     *gomock.Controller
	recorder *MockHelloMockRecorder
}

// MockHelloMockRecorder is the mock recorder for MockHello
type MockHelloMockRecorder struct {
	mock *MockHello
}

// NewMockHello creates a new mock instance
func NewMockHello(ctrl *gomock.Controller) *MockHello {
	mock := &MockHello{ctrl: ctrl}
	mock.recorder = &MockHelloMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockHello) EXPECT() *MockHelloMockRecorder {
	return m.recorder
}

// SayHello mocks base method
func (m *MockHello) SayHello() *FullName {
	ret := m.ctrl.Call(m, "SayHello")
	ret0, _ := ret[0].(*FullName)
	return ret0
}

// SayHello indicates an expected call of SayHello
func (mr *MockHelloMockRecorder) SayHello() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SayHello", reflect.TypeOf((*MockHello)(nil).SayHello))
}
